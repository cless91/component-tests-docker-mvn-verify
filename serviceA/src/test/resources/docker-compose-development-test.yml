version: "3.3"
services:
  database:
    image: mysql:8
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    ports:
      - '3306:3306'
    expose:
      - '3306'
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: contacts
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: dbpass
    networks:
      - app_network
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.0
    expose:
      - "2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app_network
  kafka:
    image: confluentinc/cp-server:5.4.0
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    expose:
      - "9092"
      - "9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      #      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      #      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      KAFKA_LISTENERS: PLAINTEXT_HOST://kafka:29092,PLAINTEXT://kafka:9092,OUTSIDE://kafka:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://kafka:29092, PLAINTEXT://kafka:9092,OUTSIDE://localhost:9094
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://kafka:29092, PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    networks:
      - app_network
  schema-registry:
    image: confluentinc/cp-schema-registry:5.4.0
    restart: always
    depends_on:
      - zookeeper
      - kafka
    expose:
      - "8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
    networks:
      - app_network
  kafka-listener:
    ports: 
    - "8080"
    image: kafka-listener:0.0.1-SNAPSHOT
    restart: always
    depends_on:
      - schema-registry
    networks:
      - app_network
networks:
  app_network:
volumes:
  db_data:
